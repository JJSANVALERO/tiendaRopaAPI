openapi: 3.0.1
info:
  title: Tienda de ropa
  description: API es para una tienda de ropa en la cual se puede comprar por web, app o en tienda.
  version: 1.0.0
servers:
  - url: 'http://localhost:8085'
tags:
  - name: Cliente
    description: Operaciones para realizar con los clientes
  - name: Vendedor
    description: Operaciones para realizar con los vendedores
  - name: Ropa
    description: Operaciones para realizar con la ropa
  - name: Pedido
    description: Operaciones para realizar con el pedido
paths:
  /client:
    get:
      tags:
        - Cliente
      summary: Listado de clientes.
      description: Obtener la información de todos los clientes.
      operationId: showAllClients
      parameters:
        - name: nombre
          in: query
          description: Filtro por nombre
          required: false
          schema:
            type: string
            default: ""
      responses:
        200:
          description: Se devuelve el listado de clientes correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Cliente
      summary: Añadir un cliente
      description: Crear un nuevo cliente.
      operationId: addClient
      requestBody:
        $ref: '#/components/requestBodies/ClientIn'
      responses:
        201:
          description: El cliente se registra correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        400:
          $ref: '#/components/responses/BadRequestClient'
        500:
          $ref: '#/components/responses/InternalServerError'
  /client/{idClient}:
    parameters:
      - $ref: '#/components/parameters/idClient'
    get:
      tags:
        - Cliente
      summary: Datos de un cliente.
      description: Obtener la información de un cliente.
      operationId: showClient
      responses:
        200:
          description: Se devuelven los datos del cliente correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        404:
          $ref: '#/components/responses/ClientNotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Cliente
      summary: Borrar un cliente.
      description: Borramos un cliente de la API.
      operationId: deleteCliente
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        404:
          $ref: '#/components/responses/ClientNotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Cliente
      summary: Modificar un cliente.
      description: Modifica toda la información de un cliente
      operationId: updateClient
      requestBody:
        $ref: '#/components/requestBodies/ClientInPut'
      responses:
        200:
          description: El cliente se ha modificado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        400:
          $ref: '#/components/responses/BadRequestClient'
        404:
          $ref: '#/components/responses/ClientNotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - Cliente
      summary: Modifica si el cliente es o no del club VIP.
      description: Modifica el campo clubVip de un cliente ya creado.
      operationId: updateClubClient
      requestBody:
        description: El valor clubVip se cambia a true o false.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchClient'
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequestClub'
        404:
          $ref: '#/components/responses/ClientNotFound'
        500:
          $ref: '#/components/responses/InternalServerError'


components:
  schemas:
    Client:
      allOf:
        - type: object
          properties:
            idCliente:
              type: number
              format: long
              example: 2
        - $ref: '#/components/schemas/ClientOut'
    ClientOut:
      type: object
      properties:
        nombre:
          type: string
          format: string
          description: nombre del cliente
          example: Juan
        fechaAlta:
          type: date
          format: date
          description: fecha de alta de cliente
          example: 09/02/1981
        clubVip:
          type: boolean
          format: boolean
          description: pertenece o no al club VIP de la tienda
          example: true
        numeroPedidos:
          type: integer
          format: int32
          description: numero de pedidos de ese cliente
          example: 1
    ErrorResponse:
      properties:
        errorCode:
          type: number
          format: int
          example: 500
        message:
          type: string
          example: Validación error
    ClientIn:
      type: object
      properties:
        nombre:
          type: string
          format: string
          description: nombre del cliente
          example: Juan
        fechaAlta:
          type: date
          format: date
          description: fecha de alta de cliente
          example: 09/02/1981
        clubVip:
          type: boolean
          format: boolean
          description: pertenece o no al club VIP de la tienda
          example: true
        numeroPedidos:
          type: integer
          format: int
          description: numero de pedidos de ese cliente
          example: 1
    BadRequestCliente:
      type: object
      properties:
        code:
          type: string
          description: código de estado
          example: 400
        message:
          type: string
          description: Error de validación.
          example: Bad Request
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorFieldClient'
    ErrorFieldClient:
      type: object
      description: El campo nombre no puede estar vacio.
      properties:
        nombre:
          type: string
          description: El campo donde se produce el error.
          example: El campo nombre no puede estar vacio
    ClientInPut:
      type: object
      properties:
        nombre:
          type: string
          format: string
          description: nombre del cliente
          example: Juan
        fechaAlta:
          type: date
          format: date
          description: fecha de alta de cliente
          example: 09/02/1981
        clubVip:
          type: boolean
          format: boolean
          description: pertenece o no al club VIP de la tienda
          example: true
        numeroPedidos:
          type: integer
          format: int
          description: numero de pedidos de ese cliente
          example: 1
    PatchClient:
      properties:
        clubVip:
          type: boolean
          format: boolean
          description: Pertenece o no al club VIP
          example: true
    BadRequestClub:
      type: object
      properties:
        code:
          type: string
          description: código de estado
          example: 400
        message:
          type: string
          description: Error de validación.
          example: Bad Request
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorFieldClub'
    ErrorFieldClub:
      type: object
      description: El campo clubVip debe ser true o false.
      properties:
        nombre:
          type: string
          description: El campo donde se produce el error.
          example: El campo clubVip debe ser true o false.
  responses:
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error code: 500
            message: "Internal server error"
    BadRequestClient:
      description: Error de validación.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestCliente'
    ClientNotFound:
      description: Cliente no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: 404
            message: "Cliente no encontrado"
    NoContent:
      description: No Content
    BadRequestClub:
      description: Error de validación.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestClub'
  requestBodies:
    ClientIn:
      description: Los datos del nuevo cliente.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientIn'
    ClientInPut:
      description: Los nuevos datos de un cliente.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientInPut'
  parameters:
    idClient:
      name: idClient
      in: path
      description: Código de cliente
      required: true
      schema:
        type: number
        format: long
